name: CI Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  gradle-build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0.1
        env:
          MYSQL_DATABASE: revex_insights
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 10s --health-timeout 5s --health-retries 3

    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
      with:
        build-root-directory: backend  # Specify the backend directory as the build root

    - name: Make gradlew executable
      run: chmod +x ./gradlew
      working-directory: backend  # Ensure this is run in the correct directory
      
    - name: Build with Gradle Wrapper
      run: ./gradlew build
      working-directory: backend  # Run the build command from the correct backend directory

  gradle-dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
      with:
        build-root-directory: backend  # Specify the backend directory as the build root

  node-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'Frontend/react-chartjs-app/package-lock.json' # THIS PATTERN did the trick for me.

    - name: Install dependencies
      run: |
        cd ./Frontend/react-chartjs-app
        npm ci

    - name: Build the project
      run: |
        cd ./Frontend/react-chartjs-app
        npm run build --if-present

    - name: Run tests
      run: |
        cd ./Frontend/react-chartjs-app
        npm test
